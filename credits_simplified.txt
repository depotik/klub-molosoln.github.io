          <TabsContent value="credits" className="space-y-4">
                <Card className={`${currentTheme.card} border-2 shadow-xl hover:shadow-2xl transition-all duration-300`}>
                  <CardHeader className="pb-4">
                    <CardTitle className="flex items-center gap-2 text-xl">
                      <CreditCard className="h-6 w-6" />
                      –ö—Ä–µ–¥–∏—Ç—ã
                      <Badge variant="outline" className="ml-2 text-xs bg-red-500/20 text-red-300 border-red-500/50">
                        3% –≤ –¥–µ–Ω—å
                      </Badge>
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="pt-0">
                    <div className="space-y-4">
                      {/* –¢–µ–∫—É—â–∞—è –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å */}
                      <div className="bg-gradient-to-r from-red-600/20 to-red-500/20 p-4 rounded-xl border border-red-400/30">
                        <div className="text-center">
                          <div className="text-2xl font-bold text-red-300">
                            {userData?.credits?.reduce((sum, credit) => sum + (credit.amount || 0), 0) || 0}
                          </div>
                          <div className="text-sm text-red-200">–¢–µ–∫—É—â–∞—è –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å</div>
                        </div>
                      </div>

                      {/* –í–∑—è—Ç—å –∫—Ä–µ–¥–∏—Ç */}
                      <div className="bg-gradient-to-r from-green-600/20 to-green-500/20 p-4 rounded-xl border border-green-400/30">
                        <h3 className="text-lg font-semibold mb-3">–í–∑—è—Ç—å –∫—Ä–µ–¥–∏—Ç</h3>
                        <div className="flex flex-col sm:flex-row gap-2">
                          <Input
                            type="number"
                            placeholder="–°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞"
                            value={creditAmount}
                            onChange={(e) => setCreditAmount(Number(e.target.value))}
                            className={`${currentTheme.input || 'bg-gray-800 border-gray-600 text-white placeholder-gray-400'}`}
                          />
                          <Button 
                            onClick={() => handleTakeCredit()}
                            disabled={!creditAmount || creditAmount < 100}
                            className="bg-green-600 hover:bg-green-700 text-white whitespace-nowrap"
                          >
                            –í–∑—è—Ç—å –∫—Ä–µ–¥–∏—Ç
                          </Button>
                        </div>
                        <div className="flex flex-wrap gap-2 mt-3">
                          <Button 
                            onClick={() => handleTakeCredit(1000)}
                            size="sm"
                            variant="outline"
                            className="border-green-400/50 text-green-300 hover:bg-green-600/20"
                          >
                            1000 üçÉ
                          </Button>
                          <Button 
                            onClick={() => handleTakeCredit(5000)}
                            size="sm"
                            variant="outline"
                            className="border-green-400/50 text-green-300 hover:bg-green-600/20"
                          >
                            5000 üçÉ
                          </Button>
                          <Button 
                            onClick={() => handleTakeCredit(10000)}
                            size="sm"
                            variant="outline"
                            className="border-green-400/50 text-green-300 hover:bg-green-600/20"
                          >
                            10000 üçÉ
                          </Button>
                        </div>
                        <p className="text-xs text-gray-400 mt-2">–ú–∏–Ω–∏–º—É–º: 100 üçÉ ‚Ä¢ 3% –≤ –¥–µ–Ω—å</p>
                      </div>

                      {/* –ê–∫—Ç–∏–≤–Ω—ã–µ –∫—Ä–µ–¥–∏—Ç—ã */}
                      {userData?.credits && userData.credits.length > 0 && (
                        <div className="space-y-2">
                          <h3 className="text-lg font-semibold">–ê–∫—Ç–∏–≤–Ω—ã–µ –∫—Ä–µ–¥–∏—Ç—ã:</h3>
                          {userData.credits.map((credit) => (
                            <div key={credit.id} className="bg-red-600/20 p-3 rounded-lg border border-red-400/30">
                              <div className="flex justify-between items-center">
                                <div>
                                  <span className="font-medium">{credit.amount} üçÉ</span>
                                  <div className="text-xs text-red-200">
                                    –û—Ç {new Date(credit.createdAt).toLocaleDateString()}
                                  </div>
                                </div>
                                <Button 
                                  onClick={() => handleRepayCredit(credit.id, credit.amount)}
                                  size="sm"
                                  className="bg-red-600 hover:bg-red-700 text-white"
                                >
                                  –ü–æ–≥–∞—Å–∏—Ç—å
                                </Button>
                              </div>
                            </div>
                          ))}
                        </div>
                      )}
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>